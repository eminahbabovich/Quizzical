{"version":3,"sources":["WelcomePage.js","Questions.js","QuizPage.js","App.js","reportWebVitals.js","index.js"],"names":["WelcomePage","props","react_default","a","createElement","className","onClick","renderQuizPage","Questions","answers","i","data","length","push","value","call","index","displayPoints","hold","id","map","answer","style","backgroundColor","held","right","opacity","question","QuizPage","quizElements","element","holdd","btn","form","styles","cursor","onSubmit","showPoints","concat","rightAnswer","disabled","App","_React$useState","React","useState","_React$useState2","Object","slicedToArray","quizPage","setQuizPage","_React$useState3","_React$useState4","questions","setQuestions","_React$useState5","_React$useState6","formData","setFormData","_React$useState7","_React$useState8","rightAnswers","setRightAnswers","_React$useState9","_React$useState10","count","setCount","_React$useState11","_React$useState12","setShowPoints","_React$useState13","_React$useState14","final","setFinal","updateRight","color","prevQuestions","prev","objectSpread","shuffle","array","randomIndex","currentIndex","Math","floor","random","_ref","useEffect","randomNum","fetch","then","res","json","results","slice","incorrect_answers","correct_answer","nanoid","replace","id1","id2","oldQuestions","questionId","answerId","boolean","boolean2","filter","UpdateFormData","event","preventDefault","j","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.75b15698.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function WelcomePage(props) {\r\n    return (\r\n        <section className=\"welcome-page\">\r\n            <div className=\"blob\"></div>\r\n            <div className=\"another\"></div>\r\n            <div className=\"flex-container\">\r\n                <h1 className=\"welcome-page--title\">Quizzical</h1>\r\n                <p className=\"welcome-page--description\">Quiz that I've built</p>\r\n                <button onClick={props.renderQuizPage} className=\"welcome-page--button\">Start Quiz</button>\r\n            </div>\r\n        </section>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function Questions (props) {\r\n    let answers = [];\r\n    for (let i = 0; i < props.data.answers.length; i++) {\r\n    answers.push(props.data.answers[i].value)\r\n    }\r\n\r\n    function call(index) {\r\n        if(!props.displayPoints) {\r\n            return (\r\n                () => \r\n        props.hold(props.data.answers[index].id, props.data.id, props.data.answers[index].value)\r\n            )\r\n        } else {\r\n            return ( () =>  false)\r\n        }\r\n    }\r\n\r\n    answers = answers.map((answer, index) => \r\n    <div onClick={call(index)} \r\n        className=\"answer-div\" \r\n        style={{\r\n            backgroundColor: (props.data.answers[index].held && !props.displayPoints)\r\n             ? \"#D6DBF5\" : (!props.data.answers[index].held && !props.displayPoints)\r\n             ? \"#F5F7FB\" : (props.displayPoints && props.data.answers[index].right === \"green\")\r\n             ? \"#94D7A2\" : (props.data.answers[index].held && props.displayPoints && props.data.answers[index].right === \"red\")\r\n             ? \"#F8BCBC\" : \"#F5F7FB\",\r\n            opacity: (props.data.answers[index].right === \"\" && props.displayPoints\r\n             || props.data.answers[index].right === \"red\" && props.displayPoints) ? 0.5 : 1\r\n        }}>{answer}</div>)\r\n    return (\r\n                <div className=\"question\">\r\n                <h2 className=\"question\">{props.data.question}</h2>\r\n                <div className=\"flex\">\r\n                    {answers}\r\n                </div>\r\n                <br />\r\n                </div>\r\n    )\r\n}","import React from 'react'\r\nimport Questions from './Questions'\r\n\r\nexport default function QuizPage(props) {\r\n    \r\n    const  quizElements = props.data.map(element => <Questions \r\n        hold={props.holdd} \r\n        data={element} \r\n        displayPoints={props.displayPoints}/>)\r\n\r\n    const btn = props.form.length == 5 ? false : true\r\n\r\n    const styles = {\r\n        cursor: btn && \"not-allowed\",\r\n        opacity: btn && 0.5\r\n    }\r\n    \r\n    return(\r\n            <section className=\"welcome-page\">\r\n                <div className=\"blob\"></div>\r\n                <div className=\"another\"></div>\r\n                <form className=\"formm\" onSubmit={props.showPoints}>\r\n                {quizElements}\r\n                <div className=\"form--flex\">\r\n                <p className=\"right-answers\">{props.displayPoints && `You scored ${props.right}/${props.rightAnswer.length} correct answers`}</p>\r\n                <div className=\"form\"><button className=\"form--button\" style={styles} disabled={btn}>{props.displayPoints ? \"Play Again\" : \"Check answers\"}</button>\r\n                </div>\r\n                </div>\r\n                </form>\r\n            </section>\r\n    )\r\n}","\nimport './App.css';\nimport React from 'react'\nimport WelcomePage from './WelcomePage'\nimport QuizPage from './QuizPage'\nimport { nanoid } from 'nanoid'\nimport { findAllByTestId } from '@testing-library/react';\n\nfunction App() {\n\n  const[quizPage, setQuizPage] = React.useState(false)\n  const[questions, setQuestions] = React.useState([])\n  const[formData, setFormData] = React.useState([])\n  const[rightAnswers, setRightAnswers] = React.useState([])\n  const[count, setCount] = React.useState(0)\n  const[showPoints, setShowPoints] = React.useState(false)\n\n  const[final, setFinal] = React.useState([])\n\n  function renderQuizPage() {\n    if(questions.length !== 0) {\n      setQuizPage(true)\n    }\n  }\n\n  function changeIsHeld(id1, id2, answer) {\n    setRightAnswers(questions)\n    setQuestions(oldQuestions => oldQuestions.map(question => {\n        return {\n        ...question,\n        answers: question.answers.map(answer => {return (answer.id === id1 && question.id === id2) ? {...answer, held: !answer.held} : (answer.id !== id1 && question.id === id2) ? {...answer, held: false} : answer})\n        }\n    }))\n    UpdateFormData(answer, id2, id1) \n  }\n\nfunction UpdateFormData(answer, questionId, answerId) {\n\n  let boolean = false\n  let boolean2 = false\n  for(let i = 0; i < formData.length; i++) {\n    if(answer === formData[i].answer) {\n      boolean = true\n      setFormData(prev => prev.filter(element => element.answer !== answer))\n    }\n    else if (questionId === formData[i].question) {\n      boolean2 = true\n      setFormData(prev => prev.filter(element => element.question !== questionId ))\n    }\n  }\n  if (boolean == false || boolean2 == true) {\n    setFormData(prev => prev.concat({answer: answer, question: questionId, id: answerId}))\n  }\n}\n\nfunction showPoint(event) {\n\n  if(showPoints === true) {\n    setShowPoints(false)\n    return\n  }\n  event.preventDefault()\n  setShowPoints(true)\n\n  setFinal(formData.map(answer => answer.answer))\n  // Compare formData to rightAnswers.\n  let boolean = false\n  for (let i = 0; i < formData.length; i++) {\n    for (let j = 0; j < rightAnswers.length; j++) {\n      if (formData[i].answer === rightAnswers[j].correct_answer) {\n        setCount(count => count + 1)\n        boolean = true\n      }\n    }\n    if (boolean == false) {\n        updateRight(\"red\", formData[i].id)\n    }\n    boolean = false\n  }\n\n  for (let i = 0; i < questions.length; i++) {\n    for(let j = 0; j < questions[i].answers.length; j++) {\n    if (questions[i].answers[j].value === questions[i].correct_answer) {\n    updateRight(\"green\", questions[i].answers[j].id)\n    }\n  }\n}\n}\n\nfunction updateRight(color, id) {\n  setQuestions(prevQuestions => prevQuestions.map(prev => ({...prev,\n  answers: prev.answers.map(answer => {\n    if (answer.id === id) {\n      return {\n        ...answer,\n        right: color\n      }\n    } else {\n      return answer\n    }\n  }\n    )})))\n}\n\nfunction shuffle(array) {\n  let currentIndex = array.length,  randomIndex;\n\n  // While there remain elements to shuffle.\n  while (currentIndex != 0) {\n\n    // Pick a remaining element.\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n\n    // And swap it with the current element.\n    [array[currentIndex], array[randomIndex]] = [\n      array[randomIndex], array[currentIndex]];\n  }\n\n  return array;\n} \n\n  React.useEffect(() => {\n    let randomNum = Math.floor((Math.random() * 30) - 5)\n      fetch(\"https://opentdb.com/api.php?amount=30&type=multiple\")\n      .then(res => res.json())\n      .then(data => setQuestions(data.results.slice(randomNum, randomNum + 5)))\n      .then(()=> setQuestions(prevQuestions => prevQuestions.map(prev => ({...prev, answers:prev.incorrect_answers.concat(prev.correct_answer), id: nanoid(), held: false}))))\n      .then(() => setQuestions(prevQuestions => prevQuestions.map(prev => ({...prev, answers: prev.answers.map(answer => ({value: answer, id: nanoid(), held: false, right: \"\"}))}))))\n      .then(() => setQuestions(prevQuestions => prevQuestions.map(prev => ({...prev, answers: shuffle(prev.answers)}))))\n      .then(() => setQuestions(prevQuestions => prevQuestions.map(\n        prev => ({...prev, question: prev.question.replace(/&quot;/g, '\"')})\n      )))\n      .then(() => setQuestions(prevQuestions => prevQuestions.map(\n        prev => ({...prev, question: prev.question.replace(/&#039;/g, \"'\")})\n      )))\n      \n  }, [])\n\n  return (\n      <div className=\"app-container\">\n          {!quizPage && <WelcomePage renderQuizPage={renderQuizPage} />}\n              {quizPage && <QuizPage \n              data={questions} \n              holdd={changeIsHeld} \n              form={formData}\n              right={count}\n              rightAnswer={rightAnswers}\n              showPoints={showPoint}\n              displayPoints={showPoints}\n              final={final}\n              />}        \n      </div>);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}